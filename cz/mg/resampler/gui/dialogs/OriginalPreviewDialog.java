package cz.mg.resampler.gui.dialogs;

import cz.mg.resampler.gui.Configuration;
import cz.mg.resampler.gui.utilities.DrawingUtilities;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import javax.swing.JPanel;


public class OriginalPreviewDialog extends javax.swing.JDialog {
    private static final int DEFAULT_WINDOW_WIDTH = 640;
    private static final int DEFAULT_WINDOW_HEIGHT = 480;
    private static final int DEFAULT_SCROLL_SPEED = 16;
    
    private final BufferedImage image;
    
    public static void show(Frame parent, BufferedImage image){
        OriginalPreviewDialog w = new OriginalPreviewDialog(parent, image);
        w.setVisible(true);
    }
    
    public static void show(Dialog parent, BufferedImage image){
        OriginalPreviewDialog w = new OriginalPreviewDialog(parent, image);
        w.setVisible(true);
    }
    
    private OriginalPreviewDialog(Frame parent, BufferedImage image) {
        super(parent, false);
        this.image = image;
        initComponents();
        postInitComponent();
        postInitComponents();
        addListeners();
    }
    
    private OriginalPreviewDialog(Dialog parent, BufferedImage image) {
        super(parent, false);
        this.image = image;
        initComponents();
        postInitComponent();
        postInitComponents();
        addListeners();
    }
    
    private void postInitComponent(){
        setSize(DEFAULT_WINDOW_WIDTH, DEFAULT_WINDOW_HEIGHT);
        setLocationRelativeTo(null);
    }
    
    private void postInitComponents(){
        if(image == null){
            jPanelPreview.setPreferredSize(new Dimension(0, 0));
            jPanelPreview.setMinimumSize(new Dimension(0, 0));
            jPanelPreview.setMaximumSize(new Dimension(0, 0));
        } else {
            jPanelPreview.setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));
            jPanelPreview.setMinimumSize(new Dimension(image.getWidth(), image.getHeight()));
            jPanelPreview.setMaximumSize(new Dimension(image.getWidth(), image.getHeight()));
        }
        
        jScrollPane.getHorizontalScrollBar().setUnitIncrement(DEFAULT_SCROLL_SPEED);
        jScrollPane.getVerticalScrollBar().setUnitIncrement(DEFAULT_SCROLL_SPEED);
    }
    
    private void addListeners(){
        addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                if(e.getKeyCode() == KeyEvent.VK_ESCAPE) dispose();
            }
        });
    }
    
    private void draw(Graphics g){
        drawBackground(g);
        drawImage(g);
    }
    
    private void drawBackground(Graphics g){
        Configuration c = Configuration.getInstance();
        DrawingUtilities.drawChecker(
                g,
                jPanelPreview,
                0,
                0,
                jPanelPreview.getWidth(),
                jPanelPreview.getHeight(),
                c.getBackgroundCheckerWidth(),
                c.getBackgroundCheckerHeight(),
                c.getBackgroundColorOuterFirst(),
                c.getBackgroundColorOuterSecond()
        );
    }
    
    private void drawImage(Graphics g){
        if(image == null) return;
        drawImageBackground(g);
        g.drawImage(image, 0, 0, null);
    }
    
    private void drawImageBackground(Graphics g){
        if(image == null) return;
        Configuration c = Configuration.getInstance();
        DrawingUtilities.drawChecker(
                g,
                jPanelPreview,
                0,
                0,
                image.getWidth(),
                image.getHeight(),
                c.getBackgroundCheckerWidth(),
                c.getBackgroundCheckerHeight(),
                c.getBackgroundColorFirst(),
                c.getBackgroundColorSecond()
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane = new javax.swing.JScrollPane();
        jPanelPreview = new JPanel(){
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                draw(g);
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Original image preview");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWeights = new double[] {1.0, 0.0};
        layout.rowWeights = new double[] {1.0, 0.0};
        getContentPane().setLayout(layout);

        jPanelPreview.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanelPreview.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout jPanelPreviewLayout = new javax.swing.GroupLayout(jPanelPreview);
        jPanelPreview.setLayout(jPanelPreviewLayout);
        jPanelPreviewLayout.setHorizontalGroup(
            jPanelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );
        jPanelPreviewLayout.setVerticalGroup(
            jPanelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        jScrollPane.setViewportView(jPanelPreview);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(jScrollPane, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelPreview;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables
}
